     git 工具
#### git push origin HEAD:refs/for/master
#### git push origin HEAD:refs/for/dev.repeater
#### git pull --rebase   origin dev.repeater
#### git pull --rebase

#### git stash  暂存
#### git stash apply 恢复暂存
#### git stash drop <name>  从暂存中移除某暂存

#### git branch --set-upstream-to=origin dev.repeater  设置分支upstream

#### gitrepo too much error
#### 备份之后git reset --hard 彻底恢复

#### git clean
#### 删除 untracked files

#### git clean -f
#### 连 untracked 的目录也一起删掉

#### git clean -fd
#### 连 git ignore的untrack 文件/目录也一起删掉 （慎用，一般这个是用来删掉编译出来的 .o之类的文件用的）

#### 在用上述 git clean 前，墙裂建议加上 -n 参数来先看看会删掉哪些文件，防止重要文件被误删
#### git clean -nf

#### git blame <path> | grep <funcname>  用来查找具体函数的改动版本信息

#### git log -p $commit-id 查看不同commit的改动

#### ssh -X login     可以使用gedit

#### netstat -r 显示路由表

#### netstat -a 显示所有端口

#### dmesg | grep ttyS*  查看串口

#### top 查看内存占用和cpu  类似win任务管理器

#### cat /proc/meminfo 查看内存

#### ps 查看进程 -w 显示全部信息


####  2082  git branch -D dev.repeater
 2083  git branch dev.repeater remotes/origin/dev.repeater
  2084  git checkout dev.repeater
   2085  git branch -a
    2086  cat .git/config
     2087  git branch

#### to fix minicom:
     ctrl+A Z  W
     in this way we can show all the log.

#### 编译lmac
#### make fullmask=1 m6251=1 -B -j wifil=1

     DEBUG
#### 导出elf文件内容
#### mips-img-elf-nm -S sf1688.elf　> zzz.txt
#### ./staging_dir/toolchain-mipsel_mips-interAptiv_gcc-4.8-linaro_uClibc-0.9.33.2/bin/mipsel-openwrt-linux-objdump -d -S -l build_dir/target-mipsel_mips-interAptiv_uClibc-0.9.33.2/linux-siflower_sf16a18-fullmask/vmlinux.debug > 1.txt
     debug oops

     测试
#### cat sys/kernel/debug/aetnensis/temperature  查看温度
#### echo 1 > sys/kernel/debug/aetnensis/recalibrate 校准
#### /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq  cpu 频率
#### /arch/mips/boot/dts/sf-.dtsi 修改cpu上限
#### echo $idx > sys/kernel/debug/ieee80211/phy0/rc/fixed_rate_idx 设置固定的发送rate
#### hexdump /dev/mtblock3 查看板子是否校准过，如果没有校准那么dump的内容只有4行左右
#### echo $txpower > /sys/kernel/debug/ieee80211/phy1/rwnx/txpower  修改5g txpower 但是有些镜像不一定有该节点 这时候需要编译debug_fs

     启动
#### /etc/config/wireless 该配置在 package/kernel/mac80211/files/lib/wifi/mac80211.sh 生成
#### /etc/config/network 该配置在package/base-files/files/bin/config_generate　生成
#### package/base-files/files/bin/board_detect 该脚本在启动早期用来检测 network和wireless配置文件 通常用来兼容升级
